<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.company.dao.PositionMapper" >
  <resultMap id="BaseResultMap" type="com.cn.company.domain.Position" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="DOUBLE" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="education_code" property="educationCode" jdbcType="VARCHAR" />
    <result column="location_code" property="locationCode" jdbcType="VARCHAR" />
    <result column="experience_code" property="experienceCode" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="last_updated_by" property="lastUpdatedBy" jdbcType="INTEGER" />
    <result column="required_message" property="requireMessage" jdbcType="VARCHAR"/>
    <result column="response_message" property="responseMessage" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, position_name, salary, company_id, count, end_time, state, education_code, location_code, 
    experience_code, creation_date, created_by, last_update_date, last_updated_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.company.domain.Position" >
    insert into position (id, position_name, salary, 
      company_id, count, end_time, 
      state, education_code, location_code, 
      experience_code, creation_date, created_by, 
      last_update_date, last_updated_by)
    values (#{id,jdbcType=INTEGER}, #{positionName,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE}, 
      #{companyId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{educationCode,jdbcType=VARCHAR}, #{locationCode,jdbcType=VARCHAR}, 
      #{experienceCode,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.company.domain.Position" useGeneratedKeys="true" keyProperty="id">
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="positionName != null" >
        position_name,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="educationCode != null" >
        education_code,
      </if>
      <if test="locationCode != null" >
        location_code,
      </if>
      <if test="experienceCode != null" >
        experience_code,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
      <if test="lastUpdatedBy != null" >
        last_updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="positionName != null" >
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="educationCode != null" >
        #{educationCode,jdbcType=VARCHAR},
      </if>
      <if test="locationCode != null" >
        #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="experienceCode != null" >
        #{experienceCode,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.company.domain.Position" >
    update position
    <set >
      <if test="positionName != null" >
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="educationCode != null" >
        education_code = #{educationCode,jdbcType=VARCHAR},
      </if>
      <if test="locationCode != null" >
        location_code = #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="experienceCode != null" >
        experience_code = #{experienceCode,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        last_updated_by = #{lastUpdatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.company.domain.Position" >
    update position
    set position_name = #{positionName,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      company_id = #{companyId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      education_code = #{educationCode,jdbcType=VARCHAR},
      location_code = #{locationCode,jdbcType=VARCHAR},
      experience_code = #{experienceCode,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryListBycompanyId" resultMap="BaseResultMap">
    select p.id,p.position_name,p.company_id,p.count,p.end_time,p.location_code,p.experience_code,p.education_code,p.salary,p.state,po.message required_message,re.message response_message
    from position p,posi_require po,responsibility re
    where p.id = po.position_id
    and p.id = re.position_id
    and p.company_id =#{companyId,jdbcType=VARCHAR}
  </select>

  <select id="selectByPositionId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.id,p.position_name,p.company_id,p.count,p.end_time,p.location_code,p.experience_code,p.education_code,p.salary,p.state,po.message required_message,re.message response_message
    from position p,posi_require po,responsibility re
    where p.id = po.position_id
      and p.id = re.position_id
      and p.id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="batchDelete">
    delete from position
    where id  in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </delete>
</mapper>